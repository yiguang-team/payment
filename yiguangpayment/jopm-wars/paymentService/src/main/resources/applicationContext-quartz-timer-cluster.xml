<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<description>Quartz的定时集群任务配置</description>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="sc_timerTrigger1" /><!-- 清理超时未支付的商品订单 -->
			</list>
		</property>
		<property name="autoStartup" value="true" />
	</bean>


	<!-- 清理超时未支付的商品订单 begin -->
	<bean id="sc_timerTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="sc_timerJobDetail1" />
		<property name="cronExpression" value="0 0/1 * * * ?" /><!-- 每隔1分钟触发一次 -->
	</bean>

	<bean id="sc_timerJobDetail1"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="productOrderServiceJob" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
		<!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
	</bean>

	<bean id="productOrderServiceJob"
		class="com.yiguang.payment.payment.order.quartz.ProductOrderServiceJob">
		<property name="productOrderPendingQueryScanner" ref="productOrderPendingQueryScanner"></property>
	</bean>
	<!-- 清理超时未支付的商品订单 end -->
	
</beans>
